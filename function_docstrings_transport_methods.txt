Function Definitions and associated docstrings for: transport_methods.py 
### 1. __init__ ###
:param host: 

------
### 2. connect ###
:param timeout: 
:return: 

------
### 3. is_running ###
Is the FPGA programmed and running?
:return: True or False

------
### 4. test_connection ###
Write to and read from the scratchpad to test the connection to the FPGA

------
### 5. ping ###
Use the 'watchdog' request to ping the FPGA host.
:return: True or False

------
### 6. disconnect ###
:return: 

------
### 7. read ###
:param device_name: 
:param size: 
:param offset: 
:return: 

------
### 8. blindwrite ###
:param device_name: 
:param data: 
:param offset: 
:return: 

------
### 9. listdev ###
Get a list of the memory bus items in this design.
:return: a list of memory devices

------
### 10. deprogram ###
Deprogram the FPGA connected by this transport
:return: 

------
### 11. set_igmp_version ###
:param version
:return: 

------
### 12. upload_to_ram_and_program ###
Upload an FPG file to RAM and then program the FPGA.
:param filename: the file to upload
:param port: the port to use on the rx end, -1 means a random port
:param timeout: how long to wait, seconds
:param wait_complete: wait for the transaction to complete, return
after upload if False
:return:

------
### 13. upload_to_flash ###
Upload the provided binary file to the flash filesystem.
:param binary_file: filename of the binary file to upload
:param port: host-side port, -1 means a random port will be used
:param force_upload: upload the binary even if it already exists
on the host
:param timeout: upload timeout, in seconds
:param wait_complete: wait for the upload to complete, or just
kick it off
:return:

------
### 14. post_get_system_information ###
Cleanup run after get_system_information
:return: 

------
